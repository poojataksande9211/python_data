1(a)...dic_comprehension
#dictionary_comprehension
# square={1:1,2:4,3:9}
square1={num:num**2 for num in range(1,4)}
print(square1)
#-----------------------
square1={f"square of {num} is":num**2 for num in range(1,4)}
for k,v in square1.items():
    print(f" {k}:{v}")
# print(square1)
#--------------------------
string="harshit"
dic_count={char:string.count(char) for char in string}
print(dic_count)

output:/e/python_tutorial/excercise_8_dictionary_comprehension
$ python dic_info.py
{1: 1, 2: 4, 3: 9}
 square of 1 is:1
 square of 2 is:4
 square of 3 is:9
{'h': 2, 'a': 1, 'r': 1, 's': 1, 'i': 1, 't': 1}

...........................................................................
1(b)...#dictionary comprehension with if else
dd={1:'odd',2:'even'}
dic_even_odd={num:('even' if num%2==0 else 'odd') for num in range(1,11)}
print(dic_even_odd)

output:/e/python_tutorial/excercise_8_dictionary_comprehension
$ python dic_comprehension_with_if_else.py
{1: 'odd', 2: 'even', 3: 'odd', 4: 'even', 5: 'odd', 6: 'even', 7: 'odd', 8: 'even', 9: 'odd', 10: 'even'}
..................................................................................
1(c)....#sets comprehension
ss={k**2 for k in range(1,11)} #no need to write key
print(ss)
#----------------------
names=['pooja','harshit','hsssg','goo']
first={name[0] for name in names}
print(first)

output:/e/python_tutorial/excercise_8_dictionary_comprehension
$ python sets_comprehension.py
{64, 1, 4, 36, 100, 9, 16, 49, 81, 25}
{'h', 'p', 'g'}
................................................................................
1(d)...def funct(l,**kwargs):
    if kwargs.get('reverse_str')==True:
        return [name[::-1].title() for name in l]
    else:
        return [name.title() for name in l]
name=['pooja','amit']
print(funct(name))
print(funct(name,reverse_str=True))

output:/e/python_tutorial/excercise_8_args
$ python func_small_capital_initial_letter.py
['Pooja', 'Amit']
['Ajoop', 'Tima']
.....................................................................................
1(e)...#SUMMURY
def add(a,b):
    return a+b
print(add(3,4))
#-------------------------
def add_args(*args): #args gather as tuple
    total=0
    for num in args:
        total=total+num
    return total
# print(add_args(1,2,3,4,5))
l=[1,2,3]
print(add_args(*l)) #to adds list unpack list using (*)
#---------------------------------------
#kwargs=keyword argument, **
def fun(**kwargs):
    print(kwargs) #kwargs gather as dictionary
    print(type(kwargs))
fun(name='harshit',age=24)
#-------------------------------------------
#args,kwargs,normal parameter,default parameter
#PADK(parameter,args,default parameter,kwargs)
def fun2(name,*args,last_name='unknown',**kwargs):
    print(name)
    print(args)
    print(last_name)
    print(kwargs)
print(fun2('pooja',1,2,3,4,a=2,b=4,f=7))

output:/python_tutorial/excercise_8_dictionary_comprehension
$ python summury.py
7
6
{'name': 'harshit', 'age': 24}
<class 'dict'>
pooja
(1, 2, 3, 4)
unknown
{'a': 2, 'b': 4, 'f': 7}
None
........................................................................